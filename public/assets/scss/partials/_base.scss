 //
 // Global imports, variables, functions, and mixins
 //
 // @package    chat
 // @author     Kenny Kaye <kenny@kaye.us>
 // @copyright  2014 Kenny Kaye

// Colors
$red: #e94b4b;
$orange: #e9af4b;
$green: #90db41;
$gray: #edeff0;
$blue: #4bb4e9;
$smoke: #f7fbfc;
$lightGray: #b0b7c7;
$lightBlue: #c2e6f8;
$darkBlue: #3f98c6;
$charcoal: #2b2b2b;

// Fonts 
$gotham: 'Gotham A', 'Gotham B', sans-serif; // 500, 700
$gothamss: 'Gotham SSm A', 'Gotham SSm B', sans-serif; // 300, 400i, 500, 700i

// Functions
@function black($opacity){
  @return rgba(0,0,0,$opacity);
}
@function white($opacity){
  @return rgba(255,255,255,$opacity);
}

// Mixins
@mixin circle($size){
  @include square($size);
  border-radius:$size;
}
@mixin square($size){
  width:$size;
  height:$size;
}
@mixin user-select($property){
  -moz-user-select: $property;
  -ms-user-select: $property;
  -webkit-touch-callout: $property;
  -webkit-user-select: $property;  
  user-select: $property;
}
@mixin hover-underline(){
  text-decoration:none;
  &:hover{ text-decoration:underline; }
}
@mixin ellipsis(){
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
@mixin center($top:0, $bottom:auto) {
  display:table;

  @if $bottom == auto {
    margin:$top auto;
  } @else {
    margin:$top auto $bottom auto;
  }  
}
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
@mixin placeholder(){
  ::-webkit-input-placeholder{
    @content;
  }
  ::-moz-placeholder{
    @content;
  }
  :-ms-input-placeholder{
    @content;
  }
}
@mixin antialias() {
  -webkit-font-smoothing: antialiased!important;
  -moz-osx-font-smoothing: grayscale!important;
  font-smoothing: antialiased!important;
}
@mixin hide-text() {
  text-indent: -9999px;
  overflow: hidden;
  text-decoration: none;
  display: block;
  font-size: 0;
  text-align: start;
}

@mixin css-arrow($box-edge         : bottom,
                 $edge-side        : center,
                 $arrow-size       : 10px,
                 $edge-side-offset : 0,
                 $fill-color       : black,
                 $border-color     : none,
                 $border-style     : border) {

// initiate internal variables
  $box-edge-inverse: bottom;
  $edge-side-pos: $edge-side;
  $edge-side-pos-value: 0;

// establish inverse variables
  @if      $box-edge == top    { $box-edge-inverse: bottom; }
  @else if $box-edge == right  { $box-edge-inverse: left;   }
  @else if $box-edge == bottom { $box-edge-inverse: top;    }
  @else if $box-edge == left   { $box-edge-inverse: right;  }

// calculate remaining internal variables
  @if ($box-edge == 'top' or
       $box-edge == 'bottom') {
    @if $edge-side == center {
      $edge-side-pos: left;
      $edge-side-pos-value: 50%;
      $edge-side-offset: (-$arrow-size);
    }
  }
  @if ($box-edge == 'left' or
       $box-edge == 'right') {
    @if $edge-side == center {
      $edge-side-pos: top;
      $edge-side-pos-value: 50%;
      $edge-side-offset: (-$arrow-size);
    }
  }

  &:after, &:before {
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border: solid rgba(#fff, 0);
  }

  &:after  {
    border-color: rgba(#fff, 0);
    border-width: $arrow-size - 1;
    #{$box-edge}: (-$arrow-size) - $arrow-size + 2;
    border-#{$box-edge-inverse}-color: $fill-color;
    #{$edge-side-pos}: $edge-side-pos-value;
    margin-#{$edge-side-pos}: $edge-side-offset + 1;
  }

  @if $border-style == flag {
    @include border-radius(2px);
    &:before {
      border-color: rgba(#fff, 0);
      border-width: $arrow-size - 1;
      #{$box-edge}: (-$arrow-size) - $arrow-size + 2;
      border-#{$box-edge-inverse}-color: $border-color;
      #{$edge-side-pos}: $edge-side-pos-value;
      margin-#{$edge-side-pos}: $edge-side-offset + 2;
    }
  } @else {
    &:before {
      border-color: rgba(#fff, 0);
      border-width: $arrow-size;
      #{$box-edge}: (-$arrow-size) - $arrow-size;
      border-#{$box-edge-inverse}-color: $border-color;
      #{$edge-side-pos}: $edge-side-pos-value;
      margin-#{$edge-side-pos}: $edge-side-offset;
    }
  }
}
